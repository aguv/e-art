{
  "contractName": "ArbitrableTransaction",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitratorExtraData",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyA",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyB",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyAFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyBFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeout",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyB",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastInteraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyA",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyB",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amountOfChoices",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "name": "_timeout",
          "type": "uint256"
        },
        {
          "name": "_partyB",
          "type": "address"
        },
        {
          "name": "_arbitratorExtraData",
          "type": "bytes"
        },
        {
          "name": "_metaEvidence",
          "type": "string"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_party",
          "type": "uint8"
        }
      ],
      "name": "HasToPayFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "MetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evidenceGroupID",
          "type": "uint256"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_evidenceGroupID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amountReimbursed",
          "type": "uint256"
        }
      ],
      "name": "reimburse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052604051620017be380380620017be8339810160409081528151602080840151928401516060850151608086015160008054600160a060020a031916600160a060020a0387161790559086018051949692949093919092019186918691869160029187918791879184916200007f916001919084019062000178565b50505060028590556003805460048054600160a060020a031916600160a060020a03881617905561010060a860020a03191633610100021760ff191660ff851617905560408051602080825283518183015283516000937f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d938693909283928301918501908083838a5b838110156200012357818101518382015260200162000109565b50505050905090810190601f168015620001515780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050600a805434019055506200021d975050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001bb57805160ff1916838001178555620001eb565b82800160010185558215620001eb579182015b82811115620001eb578251825591602001919060010190620001ce565b50620001f9929150620001fd565b5090565b6200021a91905b80821115620001f9576000815560010162000204565b90565b611591806200022d6000396000f3006080604052600436106101035763ffffffff60e060020a600035041663069fae2a81146101085780630c7ac7b61461015657806310e1d8ca146101e057806319e2641e146102115780631b9265b814610226578063200d2ed21461023b5780632904011314610274578063311a6c56146102895780634a44c2e4146102a45780634b40c974146102bc578063512491f1146102e35780636cc6cde1146102f857806370dea79a1461030d578063853c80ce146103225780638f71a26514610337578063a01096311461034c578063aa8c217c14610354578063b0a1e2b414610369578063b1bcce3a1461037e578063bac91e2e14610386578063ce425c80146103df575b600080fd5b6040805160206004803580820135601f810184900484028501840190955284845261015494369492936024939284019190819084018382808284375094975061040a9650505050505050565b005b34801561016257600080fd5b5061016b610565565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a557818101518382015260200161018d565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ec57600080fd5b506101f56105f2565b60408051600160a060020a039092168252519081900360200190f35b34801561021d57600080fd5b50610154610606565b34801561023257600080fd5b5061015461071d565b34801561024757600080fd5b506102506107b6565b6040518082600481111561026057fe5b60ff16815260200191505060405180910390f35b34801561028057600080fd5b506101f56107bf565b34801561029557600080fd5b506101546004356024356107ce565b3480156102b057600080fd5b50610154600435610886565b3480156102c857600080fd5b506102d161099a565b60408051918252519081900360200190f35b3480156102ef57600080fd5b506102d16109a0565b34801561030457600080fd5b506101f56109a6565b34801561031957600080fd5b506102d16109b5565b34801561032e57600080fd5b506101546109bb565b34801561034357600080fd5b506102d1610acb565b610154610ad1565b34801561036057600080fd5b506102d1610d3d565b34801561037557600080fd5b506102d1610d43565b610154610d49565b34801561039257600080fd5b506040805160206004803580820135601f8101849004840285018401909552848452610154943694929360249392840191908190840183828082843750949750610f909650505050505050565b3480156103eb57600080fd5b506103f4611135565b6040805160ff9092168252519081900360200190f35b6003546101009004600160a060020a03163314806104325750600454600160a060020a031633145b151561048b576040805160e560020a62461bcd0281526020600482015260296024820152600080516020611506833981519152604482015260b960020a68103830b93a3c90211702606482015290519081900360840190fd5b600080546008546040805160e360020a63093225f10281526004810183815260248201928352865160448301528651600160a060020a03909516956349912f88953495948994909260649091019160208601918190849084905b838110156104fd5781810151838201526020016104e5565b50505050905090810190601f16801561052a5780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505050505050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b505050505081565b6003546101009004600160a060020a031681565b6003546101009004600160a060020a0316331461065b576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611486833981519152604482015290519081900360640190fd5b600260095460ff16600481111561066e57fe5b146106c1576040805160e560020a62461bcd0281526020600482015260186024820152604160020a772737ba103bb0b4ba34b733903337b9103830b93a3c90211702604482015290519081900360640190fd5b6002546007540142101561070d576040805160e560020a62461bcd02815260206004820181905260248201526000805160206114a6833981519152604482015290519081900360640190fd5b60085461071b90600161113e565b565b6003546101009004600160a060020a03163314610772576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611486833981519152604482015290519081900360640190fd5b600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f193505050501580156107ae573d6000803e3d6000fd5b506000600a55565b60095460ff1681565b600454600160a060020a031681565b600054600160a060020a03163314610841576040805160e560020a62461bcd02815260206004820152602560248201527f43616e206f6e6c792062652063616c6c65642062792074686520617262697472604482015260d960020a6430ba37b91702606482015290519081900360840190fd5b604080518281529051839133917f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e756222769181900360200190a3610882828261113e565b5050565b600454600160a060020a031633146108d6576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611526833981519152604482015290519081900360640190fd5b600a5481111561094f576040805160e560020a62461bcd02815260206004820152603360248201527f43616e6e6f74207265696d627572736520616e20616d6f756e742068696768656044820152606960020a7239103a3430b7103a3432903232b837b9b4ba1702606482015290519081900360840190fd5b600354604051610100909104600160a060020a0316906108fc8315029083906000818181858888f1935050505015801561098d573d6000803e3d6000fd5b50600a8054919091039055565b60055481565b60065481565b600054600160a060020a031681565b60025481565b600454600160a060020a03163314610a0b576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611526833981519152604482015290519081900360640190fd5b600160095460ff166004811115610a1e57fe5b14610a71576040805160e560020a62461bcd0281526020600482015260186024820152604160020a772737ba103bb0b4ba34b733903337b9103830b93a3c90209702604482015290519081900360640190fd5b60025460075401421015610abd576040805160e560020a62461bcd02815260206004820181905260248201526000805160206114a6833981519152604482015290519081900360640190fd5b60085461071b90600261113e565b60075481565b6003546000906101009004600160a060020a03163314610b29576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611486833981519152604482015290519081900360640190fd5b60005460405160e060020a63f7434ea90281526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea993919291829160449091019084908015610bce5780601f10610ba357610100808354040283529160200191610bce565b820191906000526020600020905b815481529060010190602001808311610bb157829003601f168201915b505092505050602060405180830381600087803b158015610bee57600080fd5b505af1158015610c02573d6000803e3d6000fd5b505050506040513d6020811015610c1857600080fd5b505160058054340190819055909150811115610c82576040805160e560020a62461bcd02815260206004820152602a6024820152600080516020611546833981519152604482015260b160020a6934b7b71031b7b9ba399702606482015290519081900360840190fd5b600360095460ff166004811115610c9557fe5b10610ce5576040805160e560020a62461bcd02815260206004820152602160248201526000805160206114c6833981519152604482015260f960020a601702606482015290519081900360840190fd5b42600755600654811115610d31576009805460ff191660021790556040516000805160206114e68339815191529060019080825b60ff16815260200191505060405180910390a1610d3a565b610d3a816111c4565b50565b600a5481565b60085481565b600454600090600160a060020a03163314610d9c576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611526833981519152604482015290519081900360640190fd5b60005460405160e060020a63f7434ea90281526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea993919291829160449091019084908015610e415780601f10610e1657610100808354040283529160200191610e41565b820191906000526020600020905b815481529060010190602001808311610e2457829003601f168201915b505092505050602060405180830381600087803b158015610e6157600080fd5b505af1158015610e75573d6000803e3d6000fd5b505050506040513d6020811015610e8b57600080fd5b505160068054340190819055909150811115610ef5576040805160e560020a62461bcd02815260206004820152602a6024820152600080516020611546833981519152604482015260b160020a6934b7b71031b7b9ba399702606482015290519081900360840190fd5b600360095460ff166004811115610f0857fe5b10610f58576040805160e560020a62461bcd02815260206004820152602160248201526000805160206114c6833981519152604482015260f960020a601702606482015290519081900360840190fd5b42600755600554811115610d31576009805460ff191660011790556040516000805160206114e6833981519152906000908082610d19565b6003546101009004600160a060020a0316331480610fb85750600454600160a060020a031633145b1515611011576040805160e560020a62461bcd0281526020600482015260296024820152600080516020611506833981519152604482015260b960020a68103830b93a3c90211702606482015290519081900360840190fd5b600360095460ff16600481111561102457fe5b101561108b576040805160e560020a62461bcd02815260206004820152602560248201527f546865206469737075746520686173206e6f74206265656e2063726561746564604482015260d960020a64103cb2ba1702606482015290519081900360840190fd5b600080546040805160208082528551818301528551339594600160a060020a0316937fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c938893909283928301918501908083838b5b838110156110f85781810151838201526020016110e0565b50505050905090810190601f1680156111255780820380516001836020036101000a031916815260200191505b509250505060405180910390a450565b60035460ff1681565b6111488282611328565b600181141561118657600354600a54604051610100909204600160a060020a0316916108fc82150291906000818181858888f19350505050506111bb565b60028114156111bb57600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f150505050505b50506000600a55565b6009805460ff1916600390811790915560005490546040805160e060020a63c13517e102815260ff90921660048301818152602484019283526001805460026101008284161502600019019091160460448601819052600160a060020a039096169563c13517e195889592939291606490910190849080156112875780601f1061125c57610100808354040283529160200191611287565b820191906000526020600020905b81548152906001019060200180831161126a57829003601f168201915b505093505050506020604051808303818588803b1580156112a757600080fd5b505af11580156112bb573d6000803e3d6000fd5b50505050506040513d60208110156112d257600080fd5b50516008819055600080546040805183815260208101939093528051600160a060020a03909216927f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d929081900390910190a350565b6008548214611378576040805160e560020a62461bcd0281526020600482015260116024820152607960020a702bb937b733903234b9b83aba329024a21702604482015290519081900360640190fd5b60035460ff168111156113ca576040805160e560020a62461bcd02815260206004820152600f6024820152608960020a6e24b73b30b634b210393ab634b7339702604482015290519081900360640190fd5b600181141561142957600360019054906101000a9004600160a060020a0316600160a060020a03166108fc600654600554116114085760065461140c565b6005545b6040518115909202916000818181858888f1935050505050611474565b600281141561147457600454600654600554600160a060020a03909216916108fc91106114585760065461145c565b6005545b6040518115909202916000818181858888f150505050505b50506009805460ff19166004179055560043616e206f6e6c792062652063616c6c656420627920706172747920412e00005468652074696d656f75742074696d6520686173206e6f74207061737365642e446973707574652068617320616c7265616479206265656e2063726561746564ba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e56843616e206f6e6c792062652063616c6c65642062792070617274792041206f7243616e206f6e6c792062652063616c6c656420627920706172747920422e00004e6f7420656e6f7567682045544820746f20636f766572206172626974726174a165627a7a72305820d6b25a51f8ad548077325f91a21a2c528b99f4808af2753a5b5949668e3c7bcb0029",
  "deployedBytecode": "0x6080604052600436106101035763ffffffff60e060020a600035041663069fae2a81146101085780630c7ac7b61461015657806310e1d8ca146101e057806319e2641e146102115780631b9265b814610226578063200d2ed21461023b5780632904011314610274578063311a6c56146102895780634a44c2e4146102a45780634b40c974146102bc578063512491f1146102e35780636cc6cde1146102f857806370dea79a1461030d578063853c80ce146103225780638f71a26514610337578063a01096311461034c578063aa8c217c14610354578063b0a1e2b414610369578063b1bcce3a1461037e578063bac91e2e14610386578063ce425c80146103df575b600080fd5b6040805160206004803580820135601f810184900484028501840190955284845261015494369492936024939284019190819084018382808284375094975061040a9650505050505050565b005b34801561016257600080fd5b5061016b610565565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a557818101518382015260200161018d565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ec57600080fd5b506101f56105f2565b60408051600160a060020a039092168252519081900360200190f35b34801561021d57600080fd5b50610154610606565b34801561023257600080fd5b5061015461071d565b34801561024757600080fd5b506102506107b6565b6040518082600481111561026057fe5b60ff16815260200191505060405180910390f35b34801561028057600080fd5b506101f56107bf565b34801561029557600080fd5b506101546004356024356107ce565b3480156102b057600080fd5b50610154600435610886565b3480156102c857600080fd5b506102d161099a565b60408051918252519081900360200190f35b3480156102ef57600080fd5b506102d16109a0565b34801561030457600080fd5b506101f56109a6565b34801561031957600080fd5b506102d16109b5565b34801561032e57600080fd5b506101546109bb565b34801561034357600080fd5b506102d1610acb565b610154610ad1565b34801561036057600080fd5b506102d1610d3d565b34801561037557600080fd5b506102d1610d43565b610154610d49565b34801561039257600080fd5b506040805160206004803580820135601f8101849004840285018401909552848452610154943694929360249392840191908190840183828082843750949750610f909650505050505050565b3480156103eb57600080fd5b506103f4611135565b6040805160ff9092168252519081900360200190f35b6003546101009004600160a060020a03163314806104325750600454600160a060020a031633145b151561048b576040805160e560020a62461bcd0281526020600482015260296024820152600080516020611506833981519152604482015260b960020a68103830b93a3c90211702606482015290519081900360840190fd5b600080546008546040805160e360020a63093225f10281526004810183815260248201928352865160448301528651600160a060020a03909516956349912f88953495948994909260649091019160208601918190849084905b838110156104fd5781810151838201526020016104e5565b50505050905090810190601f16801561052a5780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505050505050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b505050505081565b6003546101009004600160a060020a031681565b6003546101009004600160a060020a0316331461065b576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611486833981519152604482015290519081900360640190fd5b600260095460ff16600481111561066e57fe5b146106c1576040805160e560020a62461bcd0281526020600482015260186024820152604160020a772737ba103bb0b4ba34b733903337b9103830b93a3c90211702604482015290519081900360640190fd5b6002546007540142101561070d576040805160e560020a62461bcd02815260206004820181905260248201526000805160206114a6833981519152604482015290519081900360640190fd5b60085461071b90600161113e565b565b6003546101009004600160a060020a03163314610772576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611486833981519152604482015290519081900360640190fd5b600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f193505050501580156107ae573d6000803e3d6000fd5b506000600a55565b60095460ff1681565b600454600160a060020a031681565b600054600160a060020a03163314610841576040805160e560020a62461bcd02815260206004820152602560248201527f43616e206f6e6c792062652063616c6c65642062792074686520617262697472604482015260d960020a6430ba37b91702606482015290519081900360840190fd5b604080518281529051839133917f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e756222769181900360200190a3610882828261113e565b5050565b600454600160a060020a031633146108d6576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611526833981519152604482015290519081900360640190fd5b600a5481111561094f576040805160e560020a62461bcd02815260206004820152603360248201527f43616e6e6f74207265696d627572736520616e20616d6f756e742068696768656044820152606960020a7239103a3430b7103a3432903232b837b9b4ba1702606482015290519081900360840190fd5b600354604051610100909104600160a060020a0316906108fc8315029083906000818181858888f1935050505015801561098d573d6000803e3d6000fd5b50600a8054919091039055565b60055481565b60065481565b600054600160a060020a031681565b60025481565b600454600160a060020a03163314610a0b576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611526833981519152604482015290519081900360640190fd5b600160095460ff166004811115610a1e57fe5b14610a71576040805160e560020a62461bcd0281526020600482015260186024820152604160020a772737ba103bb0b4ba34b733903337b9103830b93a3c90209702604482015290519081900360640190fd5b60025460075401421015610abd576040805160e560020a62461bcd02815260206004820181905260248201526000805160206114a6833981519152604482015290519081900360640190fd5b60085461071b90600261113e565b60075481565b6003546000906101009004600160a060020a03163314610b29576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611486833981519152604482015290519081900360640190fd5b60005460405160e060020a63f7434ea90281526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea993919291829160449091019084908015610bce5780601f10610ba357610100808354040283529160200191610bce565b820191906000526020600020905b815481529060010190602001808311610bb157829003601f168201915b505092505050602060405180830381600087803b158015610bee57600080fd5b505af1158015610c02573d6000803e3d6000fd5b505050506040513d6020811015610c1857600080fd5b505160058054340190819055909150811115610c82576040805160e560020a62461bcd02815260206004820152602a6024820152600080516020611546833981519152604482015260b160020a6934b7b71031b7b9ba399702606482015290519081900360840190fd5b600360095460ff166004811115610c9557fe5b10610ce5576040805160e560020a62461bcd02815260206004820152602160248201526000805160206114c6833981519152604482015260f960020a601702606482015290519081900360840190fd5b42600755600654811115610d31576009805460ff191660021790556040516000805160206114e68339815191529060019080825b60ff16815260200191505060405180910390a1610d3a565b610d3a816111c4565b50565b600a5481565b60085481565b600454600090600160a060020a03163314610d9c576040805160e560020a62461bcd02815260206004820152601e6024820152600080516020611526833981519152604482015290519081900360640190fd5b60005460405160e060020a63f7434ea90281526020600482019081526001805460026000198284161561010002019091160460248401819052600160a060020a039094169363f7434ea993919291829160449091019084908015610e415780601f10610e1657610100808354040283529160200191610e41565b820191906000526020600020905b815481529060010190602001808311610e2457829003601f168201915b505092505050602060405180830381600087803b158015610e6157600080fd5b505af1158015610e75573d6000803e3d6000fd5b505050506040513d6020811015610e8b57600080fd5b505160068054340190819055909150811115610ef5576040805160e560020a62461bcd02815260206004820152602a6024820152600080516020611546833981519152604482015260b160020a6934b7b71031b7b9ba399702606482015290519081900360840190fd5b600360095460ff166004811115610f0857fe5b10610f58576040805160e560020a62461bcd02815260206004820152602160248201526000805160206114c6833981519152604482015260f960020a601702606482015290519081900360840190fd5b42600755600554811115610d31576009805460ff191660011790556040516000805160206114e6833981519152906000908082610d19565b6003546101009004600160a060020a0316331480610fb85750600454600160a060020a031633145b1515611011576040805160e560020a62461bcd0281526020600482015260296024820152600080516020611506833981519152604482015260b960020a68103830b93a3c90211702606482015290519081900360840190fd5b600360095460ff16600481111561102457fe5b101561108b576040805160e560020a62461bcd02815260206004820152602560248201527f546865206469737075746520686173206e6f74206265656e2063726561746564604482015260d960020a64103cb2ba1702606482015290519081900360840190fd5b600080546040805160208082528551818301528551339594600160a060020a0316937fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c938893909283928301918501908083838b5b838110156110f85781810151838201526020016110e0565b50505050905090810190601f1680156111255780820380516001836020036101000a031916815260200191505b509250505060405180910390a450565b60035460ff1681565b6111488282611328565b600181141561118657600354600a54604051610100909204600160a060020a0316916108fc82150291906000818181858888f19350505050506111bb565b60028114156111bb57600454600a54604051600160a060020a039092169181156108fc0291906000818181858888f150505050505b50506000600a55565b6009805460ff1916600390811790915560005490546040805160e060020a63c13517e102815260ff90921660048301818152602484019283526001805460026101008284161502600019019091160460448601819052600160a060020a039096169563c13517e195889592939291606490910190849080156112875780601f1061125c57610100808354040283529160200191611287565b820191906000526020600020905b81548152906001019060200180831161126a57829003601f168201915b505093505050506020604051808303818588803b1580156112a757600080fd5b505af11580156112bb573d6000803e3d6000fd5b50505050506040513d60208110156112d257600080fd5b50516008819055600080546040805183815260208101939093528051600160a060020a03909216927f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d929081900390910190a350565b6008548214611378576040805160e560020a62461bcd0281526020600482015260116024820152607960020a702bb937b733903234b9b83aba329024a21702604482015290519081900360640190fd5b60035460ff168111156113ca576040805160e560020a62461bcd02815260206004820152600f6024820152608960020a6e24b73b30b634b210393ab634b7339702604482015290519081900360640190fd5b600181141561142957600360019054906101000a9004600160a060020a0316600160a060020a03166108fc600654600554116114085760065461140c565b6005545b6040518115909202916000818181858888f1935050505050611474565b600281141561147457600454600654600554600160a060020a03909216916108fc91106114585760065461145c565b6005545b6040518115909202916000818181858888f150505050505b50506009805460ff19166004179055560043616e206f6e6c792062652063616c6c656420627920706172747920412e00005468652074696d656f75742074696d6520686173206e6f74207061737365642e446973707574652068617320616c7265616479206265656e2063726561746564ba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e56843616e206f6e6c792062652063616c6c65642062792070617274792041206f7243616e206f6e6c792062652063616c6c656420627920706172747920422e00004e6f7420656e6f7567682045544820746f20636f766572206172626974726174a165627a7a72305820d6b25a51f8ad548077325f91a21a2c528b99f4808af2753a5b5949668e3c7bcb0029",
  "sourceMap": "488:2281:10:-;;;1172:354;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:10:4;:24;;-1:-1:-1;;;;;;1196:24:4;-1:-1:-1;;;;;1196:24:4;;;;;1172:354:10;;;1230:42:4;;1172:354:10;;;;;;;;;;;;;;;;;650:1;;1172:354;;;;;;;;1230:42:4;;-1:-1:-1;;1230:42:4;;;;;:::i;:::-;-1:-1:-1;;;2758:7:38;:18;;;2786:6;:19;;2815:6;:16;;-1:-1:-1;;;;;;2815:16:38;-1:-1:-1;;;;;2815:16:38;;;;;-1:-1:-1;;;;;;2786:19:38;2795:10;2786:19;;;-1:-1:-1;;2841:34:38;;;;;;;2890:30;;;;;;;;;;;;;;;-1:-1:-1;;2890:30:38;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2890:30:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1500:6:10;:19;;1510:9;1500:19;;;-1:-1:-1;488:2281:10;;-1:-1:-1;;;;;;;;488:2281:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;488:2281:10;;;-1:-1:-1;488:2281:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "488:2281:10:-;;;;;;;;;-1:-1:-1;;;488:2281:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6938:132:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6938:132:38;;-1:-1:-1;6938:132:38;;-1:-1:-1;;;;;;;6938:132:38;;;708:32:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;708:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;708:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:21:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;879:21:38;;;;;;;;-1:-1:-1;;;;;879:21:38;;;;;;;;;;;;;;5735:264;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5735:264:38;;;;1635:93:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1635:93:10;;;;1246:20:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:20:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;906:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;906:21:38;;;;1680:182:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1680:182:4;;;;;;;1896:250:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1896:250:10;;;;;933:21:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:21:38;;;;;;;;;;;;;;;;;;;;994;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:21:38;;;;674:28:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;674:28:4;;;;726:19:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:19:38;;;;6069:264;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6069:264:38;;;;1055:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1055:27:38;;;;3286:909;;;;701:18:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;701:18:10;;;;1135:21:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1135:21:38;;;;4373:909;;;;6461:218;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6461:218:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6461:218:38;;-1:-1:-1;6461:218:38;;-1:-1:-1;;;;;;;6461:218:38;845:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;845:28:38;;;;;;;;;;;;;;;;;;;;;;;6938:132;1721:6;;;;;-1:-1:-1;;;;;1721:6:38;1707:10;:20;;:44;;-1:-1:-1;1745:6:38;;-1:-1:-1;;;;;1745:6:38;1731:10;:20;1707:44;1699:98;;;;;;;-1:-1:-1;;;;;1699:98:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1699:98:38;;;;-1:-1:-1;;;;;1699:98:38;;;;;;;;;;;;;;;7007:10;;;7042:9;;7007:56;;;-1:-1:-1;;;;;7007:56:38;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7007:10:38;;;;:17;;7031:9;;7042;7052:10;;7007:56;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7007:56:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7007:56:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7007:56:38;;;;;6938:132;:::o;708:32:4:-;;;;;;;;;;;;;;;-1:-1:-1;;708:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;879:21:38:-;;;;;;-1:-1:-1;;;;;879:21:38;;:::o;5735:264::-;1536:6;;;;;-1:-1:-1;;;;;1536:6:38;1522:10;:20;1514:63;;;;;-1:-1:-1;;;;;1514:63:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1514:63:38;;;;;;;;;;;;;;;5808:20;5798:6;;;;:30;;;;;;;;;5790:67;;;;;-1:-1:-1;;;;;5790:67:38;;;;;;;;;;;;-1:-1:-1;;;;;5790:67:38;;;;;;;;;;;;;;;5900:7;;5882:15;;:25;5875:3;:32;;5867:77;;;;;-1:-1:-1;;;;;5867:77:38;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5867:77:38;;;;;;;;;;;;;;;5969:9;;5955:37;;1303:1;5955:13;:37::i;:::-;5735:264::o;1635:93:10:-;1536:6:38;;;;;-1:-1:-1;;;;;1536:6:38;1522:10;:20;1514:63;;;;;-1:-1:-1;;;;;1514:63:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1514:63:38;;;;;;;;;;;;;;;1678:6:10;;1694;;1678:23;;-1:-1:-1;;;;;1678:6:10;;;;:23;;;;;1694:6;1678;:23;:6;:23;1694:6;1678;:23;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1720:1:10;1711:6;:10;1635:93::o;1246:20:38:-;;;;;;:::o;906:21::-;;;-1:-1:-1;;;;;906:21:38;;:::o;1680:182:4:-;868:10;;-1:-1:-1;;;;;868:10:4;846;:33;838:83;;;;;-1:-1:-1;;;;;838:83:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;838:83:4;;;;;;;;;;;;;;;1762:49;;;;;;;;1792:10;;1780;;1762:49;;;;;;;;;1822:33;1836:10;1847:7;1822:13;:33::i;:::-;1680:182;;:::o;1896:250:10:-;1629:6:38;;-1:-1:-1;;;;;1629:6:38;1615:10;:20;1607:63;;;;;-1:-1:-1;;;;;1607:63:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1607:63:38;;;;;;;;;;;;;;;1996:6:10;;1975:27;;;1967:91;;;;;-1:-1:-1;;;;;1967:91:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1967:91:10;;;;;;;;;;;;;;;2068:6;;:34;;:6;;;;-1:-1:-1;;;;;2068:6:10;;:34;;;;;;;;;;;;:6;:34;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;2112:6:10;:27;;;;;;;;1896:250::o;933:21:38:-;;;;:::o;994:::-;;;;:::o;674:28:4:-;;;-1:-1:-1;;;;;674:28:4;;:::o;726:19:38:-;;;;:::o;6069:264::-;1629:6;;-1:-1:-1;;;;;1629:6:38;1615:10;:20;1607:63;;;;;-1:-1:-1;;;;;1607:63:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1607:63:38;;;;;;;;;;;;;;;6142:20;6132:6;;;;:30;;;;;;;;;6124:67;;;;;-1:-1:-1;;;;;6124:67:38;;;;;;;;;;;;-1:-1:-1;;;;;6124:67:38;;;;;;;;;;;;;;;6234:7;;6216:15;;:25;6209:3;:32;;6201:77;;;;;-1:-1:-1;;;;;6201:77:38;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6201:77:38;;;;;;;;;;;;;;;6303:9;;6289:37;;1340:1;6289:13;:37::i;1055:27::-;;;;:::o;3286:909::-;1536:6;;3359:20;;1536:6;;;-1:-1:-1;;;;;1536:6:38;1522:10;:20;1514:63;;;;;-1:-1:-1;;;;;1514:63:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1514:63:38;;;;;;;;;;;;;;;3382:10;;:47;;-1:-1:-1;;;;;3382:47:38;;;;;;;;;:10;:47;;;-1:-1:-1;;3382:47:38;;;;:10;:47;;;;;;;;;;;;-1:-1:-1;;;;;3382:10:38;;;;:26;;:10;;:47;;;;;;;;:10;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3382:47:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3382:47:38;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3382:47:38;3439:9;:22;;3452:9;3439:22;;;;;3382:47;;-1:-1:-1;3492:28:38;-1:-1:-1;3492:28:38;3471:117;;;;;-1:-1:-1;;;;;3471:117:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3471:117:38;;;;-1:-1:-1;;;;;3471:117:38;;;;;;;;;;;;;;;3676:21;3667:6;;;;:30;;;;;;;;;3659:76;;;;;-1:-1:-1;;;;;3659:76:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3659:76:38;;;;-1:-1:-1;;;;;3659:76:38;;;;;;;;;;;;;;;3813:3;3795:15;:21;3943:9;;:27;-1:-1:-1;3939:250:38;;;3986:6;:29;;-1:-1:-1;;3986:29:38;3995:20;3986:29;;;4034:25;;-1:-1:-1;;;;;;;;;;;4034:25:38;3986:29;;4034:25;3986:29;4034:25;;;;;;;;;;;;;;;;;3939:250;;;4149:29;4162:15;4149:12;:29::i;:::-;3286:909;:::o;701:18:10:-;;;;:::o;1135:21:38:-;;;;:::o;4373:909::-;1629:6;;4446:20;;-1:-1:-1;;;;;1629:6:38;1615:10;:20;1607:63;;;;;-1:-1:-1;;;;;1607:63:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1607:63:38;;;;;;;;;;;;;;;4469:10;;:47;;-1:-1:-1;;;;;4469:47:38;;;;;;;;;:10;:47;;;-1:-1:-1;;4469:47:38;;;;:10;:47;;;;;;;;;;;;-1:-1:-1;;;;;4469:10:38;;;;:26;;:10;;:47;;;;;;;;:10;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4469:47:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4469:47:38;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4469:47:38;4526:9;:22;;4539:9;4526:22;;;;;4469:47;;-1:-1:-1;4579:28:38;-1:-1:-1;4579:28:38;4558:117;;;;;-1:-1:-1;;;;;4558:117:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4558:117:38;;;;-1:-1:-1;;;;;4558:117:38;;;;;;;;;;;;;;;4763:21;4754:6;;;;:30;;;;;;;;;4746:76;;;;;-1:-1:-1;;;;;4746:76:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4746:76:38;;;;-1:-1:-1;;;;;4746:76:38;;;;;;;;;;;;;;;4900:3;4882:15;:21;5030:9;;:27;-1:-1:-1;5026:250:38;;;5073:6;:29;;-1:-1:-1;;5073:29:38;5082:20;5073:29;;;5121:25;;-1:-1:-1;;;;;;;;;;;5121:25:38;-1:-1:-1;;5121:25:38;-1:-1:-1;5121:25:38;;6461:218;1721:6;;;;;-1:-1:-1;;;;;1721:6:38;1707:10;:20;;:44;;-1:-1:-1;1745:6:38;;-1:-1:-1;;;;;1745:6:38;1731:10;:20;1707:44;1699:98;;;;;;;-1:-1:-1;;;;;1699:98:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1699:98:38;;;;-1:-1:-1;;;;;1699:98:38;;;;;;;;;;;;;;;6548:21;6538:6;;;;:31;;;;;;;;;;6530:81;;;;;-1:-1:-1;;;;;6530:81:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6530:81:38;;;;;;;;;;;;;;;6647:1;6635:10;;6626:46;;;;;;;;;;;;;;;6650:10;;6647:1;-1:-1:-1;;;;;6635:10:38;;6626:46;;6662:9;;6626:46;;;;;;;;;;;;;6647:1;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6626:46:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6461:218;:::o;845:28::-;;;;;;:::o;2485:281:10:-;2558:39;2578:10;2589:7;2558:19;:39::i;:::-;1303:1:38;2611:21:10;;2607:131;;;2646:6;;2658;;2646:19;;:6;;;;-1:-1:-1;;;;;2646:6:10;;:19;;;;;2658:6;2646:19;;;;2658:6;2646;:19;;;;;;;;2607:131;;;1340:1:38;2684:21:10;;2680:58;;;2719:6;;2731;;2719:19;;-1:-1:-1;;;;;2719:6:10;;;;:19;;;;;2731:6;2719;:19;:6;:19;2731:6;2719;:19;;-1:-1:-1;;;;;2680:58:10;-1:-1:-1;;2758:1:10;2749:6;:10;2485:281::o;5400:259:38:-;5464:6;:30;;-1:-1:-1;;5464:30:38;5473:21;5464:30;;;;;;-1:-1:-1;5516:10:38;5565:15;;5516:85;;;-1:-1:-1;;;;;5516:85:38;;5565:15;;;;5516:85;;;;;;;;;;;;5464:30;5516:85;;;:10;:85;;;;;-1:-1:-1;;5516:85:38;;;;;;;;;;;-1:-1:-1;;;;;5516:10:38;;;;:24;;5547:16;;5464:30;;5516:85;;;;;;;5464:30;;5516:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5516:85:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5516:85:38;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5516:85:38;5504:9;:97;;;5624:10;;;5616:36;;;;;;5516:85;5616:36;;;;;;;;-1:-1:-1;;;;;5624:10:38;;;;5616:36;;;;;;;;;;;5400:259;:::o;7409:716::-;7504:9;;7490:23;;7482:53;;;;;-1:-1:-1;;;;;7482:53:38;;;;;;;;;;;;-1:-1:-1;;;;;7482:53:38;;;;;;;;;;;;;;;7564:15;;;;7553:26;;;7545:54;;;;;-1:-1:-1;;;;;7545:54:38;;;;;;;;;;;;-1:-1:-1;;;;;7545:54:38;;;;;;;;;;;;;;;1303:1;7878:21;;7874:209;;;7913:6;;;;;;;;;-1:-1:-1;;;;;7913:6:38;-1:-1:-1;;;;;7913:11:38;:58;7937:9;;7925;;:21;:45;;7961:9;;7925:45;;;7949:9;;7925:45;7913:58;;;;;;;;;;;;;;;;;;;;;;7874:209;;;1340:1;7990:21;;7986:97;;;8025:6;;8049:9;;8037;;-1:-1:-1;;;;;8025:6:38;;;;:58;;-1:-1:-1;8037:45:38;;8073:9;;8037:45;;;8061:9;;8037:45;8025:58;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7986:97:38;-1:-1:-1;;8094:6:38;:24;;-1:-1:-1;;8094:24:38;8103:15;8094:24;;;7409:716::o",
  "source": "/**\n *  @title Arbitrable Transaction\n *  @author Clément Lesaege - <clement@lesaege.com>\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\n */\n\n\npragma solidity ^0.4.15;\nimport \"./TwoPartyArbitrable.sol\";\n\n/** @title Arbitrable Transaction\n *  This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n *  This can be used for buying goods, services and for paying freelancers.\n *  Party A is the payer. Party B is the payee.\n */\ncontract ArbitrableTransaction is TwoPartyArbitrable {\n    string constant RULING_OPTIONS = \"Reimburse partyA;Pay partyB\";\n    uint8 constant AMOUNT_OF_CHOICES = 2; // The number of ruling options available.\n\n    uint public amount; // Amount sent by party A.\n\n\n    /** @dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _timeout Time after which a party automatically loose a dispute.\n     *  @param _partyB The recipient of the transaction.\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\n     *  @param _metaEvidence Link to meta-evidence JSON.\n     */\n    constructor(\n        Arbitrator _arbitrator, \n        uint _timeout, \n        address _partyB, \n        bytes _arbitratorExtraData, \n        string _metaEvidence\n    ) \n        TwoPartyArbitrable(_arbitrator,_timeout,_partyB,AMOUNT_OF_CHOICES,_arbitratorExtraData, _metaEvidence) \n        payable \n        public \n    {\n        amount += msg.value;\n    }\n\n    /** @dev Pay the party B. To be called when the good is delivered or the service rendered.\n     */\n    function pay() public onlyPartyA {\n        partyB.transfer(amount);\n        amount = 0;\n    }\n\n    /** @dev Reimburse party A. To be called if the good or service can't be fully provided.\n     *  @param _amountReimbursed Amount to reimburse in wei.\n     */\n    function reimburse(uint _amountReimbursed) public onlyPartyB {\n        require(_amountReimbursed <= amount, \"Cannot reimburse an amount higher than the deposit.\");\n        partyA.transfer(_amountReimbursed);\n        amount -= _amountReimbursed;\n    }\n\n    /** @dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n     *  This need to be extended by contract inheriting from it.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.\n     */\n    function executeRuling(uint _disputeID, uint _ruling) internal {\n        super.executeRuling(_disputeID,_ruling);\n        if (_ruling==PARTY_A_WINS)\n            partyA.send(amount);\n        else if (_ruling==PARTY_B_WINS)\n            partyB.send(amount);\n\n        amount = 0;\n    }\n\n}\n",
  "sourcePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
  "ast": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        4003
      ]
    },
    "id": 4004,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3884,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:10"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 3885,
        "nodeType": "ImportDirective",
        "scope": 4004,
        "sourceUnit": 14379,
        "src": "194:34:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3886,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14378,
              "src": "522:18:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$14378",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 3887,
            "nodeType": "InheritanceSpecifier",
            "src": "522:18:10"
          }
        ],
        "contractDependencies": [
          710,
          11294,
          14378
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 4003,
        "linearizedBaseContracts": [
          4003,
          14378,
          710,
          11294
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3890,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 4003,
            "src": "547:62:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3888,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "547:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 3889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "580:29:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3893,
            "name": "AMOUNT_OF_CHOICES",
            "nodeType": "VariableDeclaration",
            "scope": 4003,
            "src": "615:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3891,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "615:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 3892,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "650:1:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3895,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 4003,
            "src": "701:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3894,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "701:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3921,
              "nodeType": "Block",
              "src": "1490:36:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3916,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "1500:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3917,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27479,
                        "src": "1510:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1510:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1500:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3920,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:19:10"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.\n @param _metaEvidence Link to meta-evidence JSON.",
            "id": 3922,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3908,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3897,
                    "src": "1368:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4137",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3909,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3899,
                    "src": "1380:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3910,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3901,
                    "src": "1389:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3911,
                    "name": "AMOUNT_OF_CHOICES",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3893,
                    "src": "1397:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3912,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3903,
                    "src": "1415:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3913,
                    "name": "_metaEvidence",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3905,
                    "src": "1437:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3914,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3907,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14378,
                  "src": "1349:18:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$14378_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1349:102:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3897,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1193:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$4137",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3896,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4137,
                    "src": "1193:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4137",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3899,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1226:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3898,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3901,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1250:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3903,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1276:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3905,
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1313:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3904,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:156:10"
            },
            "payable": true,
            "returnParameters": {
              "id": 3915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:0:10"
            },
            "scope": 4003,
            "src": "1172:354:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3937,
              "nodeType": "Block",
              "src": "1668:60:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3930,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "1694:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3927,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13962,
                        "src": "1678:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1678:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3932,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3933,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "1711:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1720:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1711:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3936,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:10:10"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 3938,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3924,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13999,
                  "src": "1657:10:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1657:10:10"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 3926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1668:0:10"
            },
            "scope": 4003,
            "src": "1635:93:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3962,
              "nodeType": "Block",
              "src": "1957:189:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3946,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3940,
                          "src": "1975:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3947,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "1996:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1975:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207265696d627572736520616e20616d6f756e7420686967686572207468616e20746865206465706f7369742e",
                        "id": 3949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:53:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        },
                        "value": "Cannot reimburse an amount higher than the deposit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        }
                      ],
                      "id": 3945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27482,
                        27483
                      ],
                      "referencedDeclaration": 27483,
                      "src": "1967:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:91:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3951,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:91:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3955,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3940,
                        "src": "2084:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3952,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13960,
                        "src": "2068:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2068:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3957,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3958,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "2112:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3959,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3940,
                      "src": "2122:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2112:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3961,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:27:10"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 3963,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3943,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3942,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14011,
                  "src": "1946:10:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1946:10:10"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3940,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3963,
                  "src": "1915:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1914:24:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 3944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1957:0:10"
            },
            "scope": 4003,
            "src": "1896:250:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4001,
              "nodeType": "Block",
              "src": "2548:218:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3973,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3965,
                        "src": "2578:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3974,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3967,
                        "src": "2589:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3970,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27577,
                        "src": "2558:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$4003",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 3972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14377,
                      "src": "2558:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3976,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:39:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3977,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3967,
                      "src": "2611:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3978,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13981,
                      "src": "2620:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2611:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3986,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3967,
                        "src": "2684:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3987,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13984,
                        "src": "2693:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2684:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 3995,
                    "nodeType": "IfStatement",
                    "src": "2680:58:10",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3992,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3895,
                            "src": "2731:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3989,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13962,
                            "src": "2719:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2719:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 3993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2719:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 3994,
                      "nodeType": "ExpressionStatement",
                      "src": "2719:19:10"
                    }
                  },
                  "id": 3996,
                  "nodeType": "IfStatement",
                  "src": "2607:131:10",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3983,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "2658:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3980,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13960,
                          "src": "2646:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2646:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 3984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2646:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3985,
                    "nodeType": "ExpressionStatement",
                    "src": "2646:19:10"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3997,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "2749:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2758:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2749:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4000,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:10:10"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 4002,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3965,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4002,
                  "src": "2508:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3964,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3967,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 4002,
                  "src": "2525:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3966,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2507:31:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:0:10"
            },
            "scope": 4003,
            "src": "2485:281:10",
            "stateMutability": "nonpayable",
            "superFunction": 14377,
            "visibility": "internal"
          }
        ],
        "scope": 4004,
        "src": "488:2281:10"
      }
    ],
    "src": "169:2601:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        4003
      ]
    },
    "id": 4004,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3884,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:10"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 3885,
        "nodeType": "ImportDirective",
        "scope": 4004,
        "sourceUnit": 14379,
        "src": "194:34:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3886,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14378,
              "src": "522:18:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$14378",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 3887,
            "nodeType": "InheritanceSpecifier",
            "src": "522:18:10"
          }
        ],
        "contractDependencies": [
          710,
          11294,
          14378
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 4003,
        "linearizedBaseContracts": [
          4003,
          14378,
          710,
          11294
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3890,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 4003,
            "src": "547:62:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3888,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "547:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 3889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "580:29:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3893,
            "name": "AMOUNT_OF_CHOICES",
            "nodeType": "VariableDeclaration",
            "scope": 4003,
            "src": "615:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3891,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "615:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 3892,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "650:1:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3895,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 4003,
            "src": "701:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3894,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "701:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3921,
              "nodeType": "Block",
              "src": "1490:36:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3916,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "1500:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3917,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27479,
                        "src": "1510:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1510:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1500:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3920,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:19:10"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.\n @param _metaEvidence Link to meta-evidence JSON.",
            "id": 3922,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3908,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3897,
                    "src": "1368:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4137",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3909,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3899,
                    "src": "1380:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3910,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3901,
                    "src": "1389:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3911,
                    "name": "AMOUNT_OF_CHOICES",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3893,
                    "src": "1397:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3912,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3903,
                    "src": "1415:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3913,
                    "name": "_metaEvidence",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3905,
                    "src": "1437:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3914,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3907,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14378,
                  "src": "1349:18:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$14378_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1349:102:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3897,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1193:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$4137",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3896,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4137,
                    "src": "1193:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$4137",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3899,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1226:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3898,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3901,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1250:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3903,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1276:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3905,
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1313:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3904,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:156:10"
            },
            "payable": true,
            "returnParameters": {
              "id": 3915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1490:0:10"
            },
            "scope": 4003,
            "src": "1172:354:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3937,
              "nodeType": "Block",
              "src": "1668:60:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3930,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "1694:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3927,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13962,
                        "src": "1678:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1678:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3932,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3933,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "1711:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1720:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1711:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3936,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:10:10"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 3938,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3924,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13999,
                  "src": "1657:10:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1657:10:10"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1647:2:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 3926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1668:0:10"
            },
            "scope": 4003,
            "src": "1635:93:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3962,
              "nodeType": "Block",
              "src": "1957:189:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3946,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3940,
                          "src": "1975:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3947,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "1996:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1975:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207265696d627572736520616e20616d6f756e7420686967686572207468616e20746865206465706f7369742e",
                        "id": 3949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:53:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        },
                        "value": "Cannot reimburse an amount higher than the deposit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84a35ddc39e0129e9d8033c4d73a636fb74f5b300b774078fed3a9c627c5893e",
                          "typeString": "literal_string \"Cannot reimburse an amount higher than the deposit.\""
                        }
                      ],
                      "id": 3945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27482,
                        27483
                      ],
                      "referencedDeclaration": 27483,
                      "src": "1967:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:91:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3951,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:91:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3955,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3940,
                        "src": "2084:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3952,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13960,
                        "src": "2068:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2068:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3957,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3958,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "2112:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3959,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3940,
                      "src": "2122:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2112:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3961,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:27:10"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 3963,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3943,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3942,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14011,
                  "src": "1946:10:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1946:10:10"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3940,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3963,
                  "src": "1915:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1914:24:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 3944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1957:0:10"
            },
            "scope": 4003,
            "src": "1896:250:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4001,
              "nodeType": "Block",
              "src": "2548:218:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3973,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3965,
                        "src": "2578:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3974,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3967,
                        "src": "2589:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3970,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27577,
                        "src": "2558:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$4003",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 3972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14377,
                      "src": "2558:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3976,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:39:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3977,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3967,
                      "src": "2611:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3978,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13981,
                      "src": "2620:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2611:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3986,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3967,
                        "src": "2684:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3987,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13984,
                        "src": "2693:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2684:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 3995,
                    "nodeType": "IfStatement",
                    "src": "2680:58:10",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3992,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3895,
                            "src": "2731:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3989,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13962,
                            "src": "2719:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2719:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 3993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2719:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 3994,
                      "nodeType": "ExpressionStatement",
                      "src": "2719:19:10"
                    }
                  },
                  "id": 3996,
                  "nodeType": "IfStatement",
                  "src": "2607:131:10",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3983,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "2658:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3980,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13960,
                          "src": "2646:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2646:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 3984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2646:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3985,
                    "nodeType": "ExpressionStatement",
                    "src": "2646:19:10"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3997,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3895,
                      "src": "2749:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2758:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2749:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4000,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:10:10"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 4002,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3965,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4002,
                  "src": "2508:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3964,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2508:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3967,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 4002,
                  "src": "2525:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3966,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2507:31:10"
            },
            "payable": false,
            "returnParameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:0:10"
            },
            "scope": 4003,
            "src": "2485:281:10",
            "stateMutability": "nonpayable",
            "superFunction": 14377,
            "visibility": "internal"
          }
        ],
        "scope": 4004,
        "src": "488:2281:10"
      }
    ],
    "src": "169:2601:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-07-10T20:15:16.723Z"
}
{
  "contractName": "AddressPermissionList",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "remove",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_blacklist",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610388833981016040525160008054911515740100000000000000000000000000000000000000000260a060020a60ff0219600160a060020a0319909316331792909216919091179055610318806100706000396000f3006080604052600436106100695763ffffffff60e060020a6000350416633fd8cc4e811461006e578063446bffba146100a3578063715018a6146100bd5780638da5cb5b146100d257806395bc267314610103578063beabdb7b1461011b578063f2fde38b14610133575b600080fd5b34801561007a57600080fd5b5061008f600160a060020a0360043516610154565b604080519115158252519081900360200190f35b3480156100af57600080fd5b506100bb600435610172565b005b3480156100c957600080fd5b506100bb6101a7565b3480156100de57600080fd5b506100e7610206565b60408051600160a060020a039092168252519081900360200190f35b34801561010f57600080fd5b506100bb600435610215565b34801561012757600080fd5b5061008f600435610244565b34801561013f57600080fd5b506100bb600160a060020a0360043516610259565b600160a060020a031660009081526002602052604090205460ff1690565b600054600160a060020a0316331461018957600080fd5b6000908152600160208190526040909120805460ff19169091179055565b600054600160a060020a031633146101be57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a260008054600160a060020a0319169055565b600054600160a060020a031681565b600054600160a060020a0316331461022c57600080fd5b6000908152600160205260409020805460ff19169055565b60009081526001602052604090205460ff1690565b600054600160a060020a0316331461027057600080fd5b6102798161027c565b50565b600160a060020a038116151561029157600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a031916600160a060020a03929092169190911790555600a165627a7a72305820824a5dd5a6e0b4c50f211fcb234c91d78030c2f0c69cd72d08b0739cd975fa340029",
  "deployedBytecode": "0x6080604052600436106100695763ffffffff60e060020a6000350416633fd8cc4e811461006e578063446bffba146100a3578063715018a6146100bd5780638da5cb5b146100d257806395bc267314610103578063beabdb7b1461011b578063f2fde38b14610133575b600080fd5b34801561007a57600080fd5b5061008f600160a060020a0360043516610154565b604080519115158252519081900360200190f35b3480156100af57600080fd5b506100bb600435610172565b005b3480156100c957600080fd5b506100bb6101a7565b3480156100de57600080fd5b506100e7610206565b60408051600160a060020a039092168252519081900360200190f35b34801561010f57600080fd5b506100bb600435610215565b34801561012757600080fd5b5061008f600435610244565b34801561013f57600080fd5b506100bb600160a060020a0360043516610259565b600160a060020a031660009081526002602052604090205460ff1690565b600054600160a060020a0316331461018957600080fd5b6000908152600160208190526040909120805460ff19169091179055565b600054600160a060020a031633146101be57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a260008054600160a060020a0319169055565b600054600160a060020a031681565b600054600160a060020a0316331461022c57600080fd5b6000908152600160205260409020805460ff19169055565b60009081526001602052604090205460ff1690565b600054600160a060020a0316331461027057600080fd5b6102798161027c565b50565b600160a060020a038116151561029157600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a031916600160a060020a03929092169190911790555600a165627a7a72305820824a5dd5a6e0b4c50f211fcb234c91d78030c2f0c69cd72d08b0739cd975fa340029",
  "sourceMap": "282:775:40:-;;;659:65;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:65:40;;;;;;;;;;;;;567:5:64;:18;;873:22:45;;;;;-1:-1:-1;;;;;;;;;;;;567:18:64;;;575:10;567:18;873:22:45;;;;;;;;;;282:775:40;;;;;;",
  "deployedSourceMap": "282:775:40:-;;;;;;;;;-1:-1:-1;;;282:775:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;947:108:40;-1:-1:-1;;;;;947:108:40;;;;;;;;;;;;;;;;;;;;;;;926:82:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;926:82:45;;;;;;;1001:111:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:64;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:64;;;;;;;;-1:-1:-1;;;;;238:20:64;;;;;;;;;;;;;;1014:86:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1014:86:45;;;;;1317:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1317:108:45;;;;;1274:103:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:64;-1:-1:-1;;;;;1274:103:64;;;;;947:108:40;-1:-1:-1;;;;;1036:12:40;1005;1036;;;:4;:12;;;;;;;;;947:108::o;926:82:45:-;719:5:64;;-1:-1:-1;;;;;719:5:64;705:10;:19;697:28;;;;;;982:12:45;;;;997:4;982:12;;;;;;;;:19;;-1:-1:-1;;982:19:45;;;;;;926:82::o;1001:111:64:-;719:5;;-1:-1:-1;;;;;719:5:64;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:64;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;;;;;1089:18:64;;;1001:111::o;238:20::-;;;-1:-1:-1;;;;;238:20:64;;:::o;1014:86:45:-;719:5:64;;-1:-1:-1;;;;;719:5:64;705:10;:19;697:28;;;;;;1088:5:45;1073:12;;;:4;:12;;;;;:20;;-1:-1:-1;;1073:20:45;;;1014:86::o;1317:108::-;1375:12;1406;;;:4;:12;;;;;;;;;1317:108::o;1274:103:64:-;719:5;;-1:-1:-1;;;;;719:5:64;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;-1:-1:-1;;;;;1582:23:64;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:64;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;;;;;1661:17:64;-1:-1:-1;;;;;1661:17:64;;;;;;;;;;1512:171::o",
  "source": "/**\n *  @title Address Permission List\n *  @author Cl√©ment Lesaege - <clement@lesaege.com>\n */\n\npragma solidity ^0.4.15;\n\nimport \"./PermissionList.sol\";\n\n/**\n *  @title Address Permission List\n *  This is a permission list for addresses. The owner can add or remove addresses.\n */\ncontract AddressPermissionList is PermissionList {\n    /* Storage */\n\n    mapping(address => bool) list; // True if the address is registered.\n\n    /* Constructor */\n\n    /**\n     *  @dev Constructs the address permission list and sets the type.\n     *  @param _blacklist True if the list should function as a blacklist, false if it should function as a whitelist.\n     */\n    constructor(bool _blacklist) PermissionList(_blacklist) public {}\n\n    /* Public Views */\n\n    /**\n     *  @dev Return true if the address is allowed.\n     *  @param _value The address we want to check.\n     *  @return allowed True if the address is allowed, false otherwise.\n     */\n    function isPermitted(address _value) public view returns (bool allowed) {\n        return list[_value];\n    }\n}\n",
  "sourcePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressPermissionList.sol",
  "ast": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressPermissionList.sol",
    "exportedSymbols": {
      "AddressPermissionList": [
        14669
      ]
    },
    "id": 14670,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14640,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "97:24:40"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/PermissionList.sol",
        "file": "./PermissionList.sol",
        "id": 14641,
        "nodeType": "ImportDirective",
        "scope": 14670,
        "sourceUnit": 21925,
        "src": "123:30:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14642,
              "name": "PermissionList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21924,
              "src": "316:14:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionList_$21924",
                "typeString": "contract PermissionList"
              }
            },
            "id": 14643,
            "nodeType": "InheritanceSpecifier",
            "src": "316:14:40"
          }
        ],
        "contractDependencies": [
          21859,
          21924,
          26819
        ],
        "contractKind": "contract",
        "documentation": " @title Address Permission List\n This is a permission list for addresses. The owner can add or remove addresses.",
        "fullyImplemented": true,
        "id": 14669,
        "linearizedBaseContracts": [
          14669,
          21924,
          21859,
          26819
        ],
        "name": "AddressPermissionList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 14647,
            "name": "list",
            "nodeType": "VariableDeclaration",
            "scope": 14669,
            "src": "356:29:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 14646,
              "keyType": {
                "id": 14644,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "364:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "356:24:40",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 14645,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "375:4:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14655,
              "nodeType": "Block",
              "src": "722:2:40",
              "statements": []
            },
            "documentation": " @dev Constructs the address permission list and sets the type.\n @param _blacklist True if the list should function as a blacklist, false if it should function as a whitelist.",
            "id": 14656,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 14652,
                    "name": "_blacklist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14649,
                    "src": "703:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 14653,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14651,
                  "name": "PermissionList",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21924,
                  "src": "688:14:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PermissionList_$21924_$",
                    "typeString": "type(contract PermissionList)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "688:26:40"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14649,
                  "name": "_blacklist",
                  "nodeType": "VariableDeclaration",
                  "scope": 14656,
                  "src": "671:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "670:17:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 14654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:40"
            },
            "scope": 14669,
            "src": "659:65:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14667,
              "nodeType": "Block",
              "src": "1019:36:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 14663,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14647,
                      "src": "1036:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 14665,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 14664,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14658,
                      "src": "1041:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1036:12:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14662,
                  "id": 14666,
                  "nodeType": "Return",
                  "src": "1029:19:40"
                }
              ]
            },
            "documentation": " @dev Return true if the address is allowed.\n @param _value The address we want to check.\n @return allowed True if the address is allowed, false otherwise.",
            "id": 14668,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14658,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 14668,
                  "src": "968:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:16:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 14662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14661,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 14668,
                  "src": "1005:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14660,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:14:40"
            },
            "scope": 14669,
            "src": "947:108:40",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 14670,
        "src": "282:775:40"
      }
    ],
    "src": "97:961:40"
  },
  "legacyAST": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressPermissionList.sol",
    "exportedSymbols": {
      "AddressPermissionList": [
        14669
      ]
    },
    "id": 14670,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14640,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "97:24:40"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/PermissionList.sol",
        "file": "./PermissionList.sol",
        "id": 14641,
        "nodeType": "ImportDirective",
        "scope": 14670,
        "sourceUnit": 21925,
        "src": "123:30:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14642,
              "name": "PermissionList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21924,
              "src": "316:14:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionList_$21924",
                "typeString": "contract PermissionList"
              }
            },
            "id": 14643,
            "nodeType": "InheritanceSpecifier",
            "src": "316:14:40"
          }
        ],
        "contractDependencies": [
          21859,
          21924,
          26819
        ],
        "contractKind": "contract",
        "documentation": " @title Address Permission List\n This is a permission list for addresses. The owner can add or remove addresses.",
        "fullyImplemented": true,
        "id": 14669,
        "linearizedBaseContracts": [
          14669,
          21924,
          21859,
          26819
        ],
        "name": "AddressPermissionList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 14647,
            "name": "list",
            "nodeType": "VariableDeclaration",
            "scope": 14669,
            "src": "356:29:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 14646,
              "keyType": {
                "id": 14644,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "364:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "356:24:40",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 14645,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "375:4:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14655,
              "nodeType": "Block",
              "src": "722:2:40",
              "statements": []
            },
            "documentation": " @dev Constructs the address permission list and sets the type.\n @param _blacklist True if the list should function as a blacklist, false if it should function as a whitelist.",
            "id": 14656,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 14652,
                    "name": "_blacklist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14649,
                    "src": "703:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 14653,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14651,
                  "name": "PermissionList",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21924,
                  "src": "688:14:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PermissionList_$21924_$",
                    "typeString": "type(contract PermissionList)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "688:26:40"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14649,
                  "name": "_blacklist",
                  "nodeType": "VariableDeclaration",
                  "scope": 14656,
                  "src": "671:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "670:17:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 14654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:40"
            },
            "scope": 14669,
            "src": "659:65:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14667,
              "nodeType": "Block",
              "src": "1019:36:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 14663,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14647,
                      "src": "1036:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 14665,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 14664,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14658,
                      "src": "1041:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1036:12:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14662,
                  "id": 14666,
                  "nodeType": "Return",
                  "src": "1029:19:40"
                }
              ]
            },
            "documentation": " @dev Return true if the address is allowed.\n @param _value The address we want to check.\n @return allowed True if the address is allowed, false otherwise.",
            "id": 14668,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14658,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 14668,
                  "src": "968:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:16:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 14662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14661,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 14668,
                  "src": "1005:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14660,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:14:40"
            },
            "scope": 14669,
            "src": "947:108:40",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 14670,
        "src": "282:775:40"
      }
    ],
    "src": "97:961:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-07-10T20:15:16.861Z"
}
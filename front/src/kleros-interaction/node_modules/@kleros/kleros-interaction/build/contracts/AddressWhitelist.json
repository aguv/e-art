{
  "contractName": "AddressWhitelist",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610684806100536000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b0a4f1461007d57806329092d0e146100c05780633fd8cc4e14610103578063715018a61461015e5780638da5cb5b14610175578063f2fde38b146101cc575b600080fd5b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020f565b005b3480156100cc57600080fd5b50610101600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c4565b005b34801561010f57600080fd5b50610144600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061037a565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b506101736103d0565b005b34801561018157600080fd5b5061018a6104d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d857600080fd5b5061020d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f7565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026a57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031f57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561055257600080fd5b61055b8161055e565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561059a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058209733f5b3fd7dbbc6c3964414e97c6223ac69b5fde4e451cdaf7bb016ebc8c8fc0029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b0a4f1461007d57806329092d0e146100c05780633fd8cc4e14610103578063715018a61461015e5780638da5cb5b14610175578063f2fde38b146101cc575b600080fd5b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020f565b005b3480156100cc57600080fd5b50610101600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c4565b005b34801561010f57600080fd5b50610144600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061037a565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b506101736103d0565b005b34801561018157600080fd5b5061018a6104d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d857600080fd5b5061020d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f7565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026a57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031f57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561042b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561055257600080fd5b61055b8161055e565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561059a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058209733f5b3fd7dbbc6c3964414e97c6223ac69b5fde4e451cdaf7bb016ebc8c8fc0029",
  "sourceMap": "342:643:16:-;;;575:10:33;567:5;;:18;;;;;;;;;;;;;;;;;;342:643:16;;;;;;",
  "deployedSourceMap": "342:643:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:78:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;588:82:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;875:108:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:33;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:78:16;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;567:4:16;549:9;:17;559:6;549:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;500:78;:::o;588:82::-;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;658:5:16;640:9;:17;650:6;640:17;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;588:82;:::o;875:108::-;928:12;959:9;:17;969:6;959:17;;;;;;;;;;;;;;;;;;;;;;;;;952:24;;875:108;;;:::o;827:111:33:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;238:20::-;;;;;;;;;;;;;:::o;1100:103::-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;1338:171::-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o",
  "source": "/**\n *  @title Address Whitelist\n *  @author Clément Lesaege - <clement@lesaege.com>\n */\n\npragma solidity ^0.4.15;\n\nimport \"zeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./AddressPermissionInterface.sol\";\n\n/**\n *  @title Address Whitelist\n *  This is a Whitelist for addresses. The owner contract can Whitelist addresses. \n */\ncontract AddressWhitelist is Ownable, AddressPermissionInterface {\n    \n    mapping(address => bool) registred; // True if the address is registred.\n    \n    function add(address _value) onlyOwner {\n        registred[_value]=true;\n    }\n    \n    function remove(address _value) onlyOwner {\n        registred[_value]=false;\n    }\n    \n    /** @dev Return true is the address is allowed.\n     *  @param _value The address we want to know if allowed.\n     *  @return allowed True if the address is allowed, false otherwize.\n     */\n    function isPermitted(address _value) public returns (bool allowed) {\n        return registred[_value];\n    }\n}",
  "sourcePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressWhitelist.sol",
  "ast": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressWhitelist.sol",
    "exportedSymbols": {
      "AddressWhitelist": [
        3018
      ]
    },
    "id": 3019,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2967,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "91:24:16"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2968,
        "nodeType": "ImportDirective",
        "scope": 3019,
        "sourceUnit": 6097,
        "src": "117:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressPermissionInterface.sol",
        "file": "./AddressPermissionInterface.sol",
        "id": 2969,
        "nodeType": "ImportDirective",
        "scope": 3019,
        "sourceUnit": 2966,
        "src": "177:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2970,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6096,
              "src": "371:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6096",
                "typeString": "contract Ownable"
              }
            },
            "id": 2971,
            "nodeType": "InheritanceSpecifier",
            "src": "371:7:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2972,
              "name": "AddressPermissionInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2965,
              "src": "380:26:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressPermissionInterface_$2965",
                "typeString": "contract AddressPermissionInterface"
              }
            },
            "id": 2973,
            "nodeType": "InheritanceSpecifier",
            "src": "380:26:16"
          }
        ],
        "contractDependencies": [
          2965,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Address Whitelist\n This is a Whitelist for addresses. The owner contract can Whitelist addresses. ",
        "fullyImplemented": true,
        "id": 3018,
        "linearizedBaseContracts": [
          3018,
          2965,
          6096
        ],
        "name": "AddressWhitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2977,
            "name": "registred",
            "nodeType": "VariableDeclaration",
            "scope": 3018,
            "src": "418:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2976,
              "keyType": {
                "id": 2974,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "426:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "418:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2975,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "437:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2990,
              "nodeType": "Block",
              "src": "539:39:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2984,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2977,
                        "src": "549:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2986,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2985,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2979,
                        "src": "559:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "549:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "567:4:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "549:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "549:22:16"
                }
              ]
            },
            "documentation": null,
            "id": 2991,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2982,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2981,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "529:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "529:9:16"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2979,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2991,
                  "src": "513:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:16:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 2983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:16"
            },
            "scope": 3018,
            "src": "500:78:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3004,
              "nodeType": "Block",
              "src": "630:40:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2998,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2977,
                        "src": "640:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3000,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2999,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "650:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "640:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "658:5:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "640:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3003,
                  "nodeType": "ExpressionStatement",
                  "src": "640:23:16"
                }
              ]
            },
            "documentation": null,
            "id": 3005,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2996,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2995,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "620:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "620:9:16"
              }
            ],
            "name": "remove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2993,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3005,
                  "src": "604:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:16:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 2997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:16"
            },
            "scope": 3018,
            "src": "588:82:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3016,
              "nodeType": "Block",
              "src": "942:41:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3012,
                      "name": "registred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2977,
                      "src": "959:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3014,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3013,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3007,
                      "src": "969:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "959:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3011,
                  "id": 3015,
                  "nodeType": "Return",
                  "src": "952:24:16"
                }
              ]
            },
            "documentation": "@dev Return true is the address is allowed.\n @param _value The address we want to know if allowed.\n @return allowed True if the address is allowed, false otherwize.",
            "id": 3017,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3007,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "896:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "895:16:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 3011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3010,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "928:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:14:16"
            },
            "scope": 3018,
            "src": "875:108:16",
            "stateMutability": "nonpayable",
            "superFunction": 2964,
            "visibility": "public"
          }
        ],
        "scope": 3019,
        "src": "342:643:16"
      }
    ],
    "src": "91:894:16"
  },
  "legacyAST": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressWhitelist.sol",
    "exportedSymbols": {
      "AddressWhitelist": [
        3018
      ]
    },
    "id": 3019,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2967,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "91:24:16"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2968,
        "nodeType": "ImportDirective",
        "scope": 3019,
        "sourceUnit": 6097,
        "src": "117:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressPermissionInterface.sol",
        "file": "./AddressPermissionInterface.sol",
        "id": 2969,
        "nodeType": "ImportDirective",
        "scope": 3019,
        "sourceUnit": 2966,
        "src": "177:42:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2970,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6096,
              "src": "371:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6096",
                "typeString": "contract Ownable"
              }
            },
            "id": 2971,
            "nodeType": "InheritanceSpecifier",
            "src": "371:7:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2972,
              "name": "AddressPermissionInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2965,
              "src": "380:26:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressPermissionInterface_$2965",
                "typeString": "contract AddressPermissionInterface"
              }
            },
            "id": 2973,
            "nodeType": "InheritanceSpecifier",
            "src": "380:26:16"
          }
        ],
        "contractDependencies": [
          2965,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Address Whitelist\n This is a Whitelist for addresses. The owner contract can Whitelist addresses. ",
        "fullyImplemented": true,
        "id": 3018,
        "linearizedBaseContracts": [
          3018,
          2965,
          6096
        ],
        "name": "AddressWhitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2977,
            "name": "registred",
            "nodeType": "VariableDeclaration",
            "scope": 3018,
            "src": "418:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2976,
              "keyType": {
                "id": 2974,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "426:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "418:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2975,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "437:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2990,
              "nodeType": "Block",
              "src": "539:39:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2984,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2977,
                        "src": "549:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2986,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2985,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2979,
                        "src": "559:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "549:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "567:4:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "549:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "549:22:16"
                }
              ]
            },
            "documentation": null,
            "id": 2991,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2982,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2981,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "529:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "529:9:16"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2979,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2991,
                  "src": "513:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:16:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 2983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:16"
            },
            "scope": 3018,
            "src": "500:78:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3004,
              "nodeType": "Block",
              "src": "630:40:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2998,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2977,
                        "src": "640:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3000,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2999,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "650:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "640:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "658:5:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "640:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3003,
                  "nodeType": "ExpressionStatement",
                  "src": "640:23:16"
                }
              ]
            },
            "documentation": null,
            "id": 3005,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2996,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2995,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "620:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "620:9:16"
              }
            ],
            "name": "remove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2993,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3005,
                  "src": "604:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:16:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 2997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:16"
            },
            "scope": 3018,
            "src": "588:82:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3016,
              "nodeType": "Block",
              "src": "942:41:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3012,
                      "name": "registred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2977,
                      "src": "959:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3014,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3013,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3007,
                      "src": "969:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "959:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3011,
                  "id": 3015,
                  "nodeType": "Return",
                  "src": "952:24:16"
                }
              ]
            },
            "documentation": "@dev Return true is the address is allowed.\n @param _value The address we want to know if allowed.\n @return allowed True if the address is allowed, false otherwize.",
            "id": 3017,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3007,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "896:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "895:16:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 3011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3010,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "928:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:14:16"
            },
            "scope": 3018,
            "src": "875:108:16",
            "stateMutability": "nonpayable",
            "superFunction": 2964,
            "visibility": "public"
          }
        ],
        "scope": 3019,
        "src": "342:643:16"
      }
    ],
    "src": "91:894:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-12T16:57:03.240Z"
}
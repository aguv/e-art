{
  "contractName": "AddressBlacklist",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "address"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610697806100536000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b0a4f1461007d57806329092d0e146100c05780633fd8cc4e14610103578063715018a61461015e5780638da5cb5b14610175578063f2fde38b146101cc575b600080fd5b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020f565b005b3480156100cc57600080fd5b50610101600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c4565b005b34801561010f57600080fd5b50610144600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061037a565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b5061017361038d565b005b34801561018157600080fd5b5061018a61048f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d857600080fd5b5061020d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104b4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026a57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031f57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006103858261051b565b159050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103e857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561050f57600080fd5b61051881610571565b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156105ad57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582068f5feb6154963023ebcc6407cf3cd42c651d404af522d875fbfef20e53949890029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b0a4f1461007d57806329092d0e146100c05780633fd8cc4e14610103578063715018a61461015e5780638da5cb5b14610175578063f2fde38b146101cc575b600080fd5b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020f565b005b3480156100cc57600080fd5b50610101600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102c4565b005b34801561010f57600080fd5b50610144600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061037a565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b5061017361038d565b005b34801561018157600080fd5b5061018a61048f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d857600080fd5b5061020d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104b4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026a57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031f57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006103858261051b565b159050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103e857600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561050f57600080fd5b61051881610571565b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156105ad57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582068f5feb6154963023ebcc6407cf3cd42c651d404af522d875fbfef20e53949890029",
  "sourceMap": "332:372:14:-;;;575:10:33;567:5;;:18;;;;;;;;;;;;;;;;;;332:372:14;;;;;;",
  "deployedSourceMap": "332:372:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:78:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:78:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;588:82:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;585:117:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;585:117:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:33;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;500:78:16;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;567:4:16;549:9;:17;559:6;549:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;500:78;:::o;588:82::-;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;658:5:16;640:9;:17;650:6;640:17;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;588:82;:::o;585:117:14:-;638:12;670:25;688:6;670:17;:25::i;:::-;669:26;662:33;;585:117;;;:::o;827:111:33:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;238:20::-;;;;;;;;;;;;;:::o;1100:103::-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;875:108:16:-;928:12;959:9;:17;969:6;959:17;;;;;;;;;;;;;;;;;;;;;;;;;952:24;;875:108;;;:::o;1338:171:33:-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o",
  "source": "/**\n *  @title Address Blacklist\n *  @author Clément Lesaege - <clement@lesaege.com>\n */\n\npragma solidity ^0.4.15;\n\nimport \"zeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./AddressWhitelist.sol\";\n\n/**\n *  @title Address Blacklist\n *  This is a Blacklist for addresses. The owner contract can Blacklist addresses. \n */\ncontract AddressBlacklist is AddressWhitelist {\n\n    \n    /** @dev Return true if the address is allowed.\n     *  @param _value The address we want to know if allowed.\n     *  @return allowed True if the address is allowed, false otherwize.\n     */\n    function isPermitted(address _value) public returns (bool allowed) {\n        return !super.isPermitted(_value);\n    }\n}",
  "sourcePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressBlacklist.sol",
  "ast": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressBlacklist.sol",
    "exportedSymbols": {
      "AddressBlacklist": [
        2955
      ]
    },
    "id": 2956,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2936,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "91:24:14"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2937,
        "nodeType": "ImportDirective",
        "scope": 2956,
        "sourceUnit": 6097,
        "src": "117:59:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressWhitelist.sol",
        "file": "./AddressWhitelist.sol",
        "id": 2938,
        "nodeType": "ImportDirective",
        "scope": 2956,
        "sourceUnit": 3019,
        "src": "177:32:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2939,
              "name": "AddressWhitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3018,
              "src": "361:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressWhitelist_$3018",
                "typeString": "contract AddressWhitelist"
              }
            },
            "id": 2940,
            "nodeType": "InheritanceSpecifier",
            "src": "361:16:14"
          }
        ],
        "contractDependencies": [
          2965,
          3018,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Address Blacklist\n This is a Blacklist for addresses. The owner contract can Blacklist addresses. ",
        "fullyImplemented": true,
        "id": 2955,
        "linearizedBaseContracts": [
          2955,
          3018,
          2965,
          6096
        ],
        "name": "AddressBlacklist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2953,
              "nodeType": "Block",
              "src": "652:50:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "669:26:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2949,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2942,
                          "src": "688:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2947,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6699,
                          "src": "670:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_AddressBlacklist_$2955",
                            "typeString": "contract super AddressBlacklist"
                          }
                        },
                        "id": 2948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isPermitted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3017,
                        "src": "670:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) returns (bool)"
                        }
                      },
                      "id": 2950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "670:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2946,
                  "id": 2952,
                  "nodeType": "Return",
                  "src": "662:33:14"
                }
              ]
            },
            "documentation": "@dev Return true if the address is allowed.\n @param _value The address we want to know if allowed.\n @return allowed True if the address is allowed, false otherwize.",
            "id": 2954,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2942,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "606:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "605:16:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2945,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "638:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2944,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:14:14"
            },
            "scope": 2955,
            "src": "585:117:14",
            "stateMutability": "nonpayable",
            "superFunction": 3017,
            "visibility": "public"
          }
        ],
        "scope": 2956,
        "src": "332:372:14"
      }
    ],
    "src": "91:613:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressBlacklist.sol",
    "exportedSymbols": {
      "AddressBlacklist": [
        2955
      ]
    },
    "id": 2956,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2936,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "91:24:14"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2937,
        "nodeType": "ImportDirective",
        "scope": 2956,
        "sourceUnit": 6097,
        "src": "117:59:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/AddressWhitelist.sol",
        "file": "./AddressWhitelist.sol",
        "id": 2938,
        "nodeType": "ImportDirective",
        "scope": 2956,
        "sourceUnit": 3019,
        "src": "177:32:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2939,
              "name": "AddressWhitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3018,
              "src": "361:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressWhitelist_$3018",
                "typeString": "contract AddressWhitelist"
              }
            },
            "id": 2940,
            "nodeType": "InheritanceSpecifier",
            "src": "361:16:14"
          }
        ],
        "contractDependencies": [
          2965,
          3018,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Address Blacklist\n This is a Blacklist for addresses. The owner contract can Blacklist addresses. ",
        "fullyImplemented": true,
        "id": 2955,
        "linearizedBaseContracts": [
          2955,
          3018,
          2965,
          6096
        ],
        "name": "AddressBlacklist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2953,
              "nodeType": "Block",
              "src": "652:50:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "669:26:14",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2949,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2942,
                          "src": "688:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2947,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6699,
                          "src": "670:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_AddressBlacklist_$2955",
                            "typeString": "contract super AddressBlacklist"
                          }
                        },
                        "id": 2948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isPermitted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3017,
                        "src": "670:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) returns (bool)"
                        }
                      },
                      "id": 2950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "670:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2946,
                  "id": 2952,
                  "nodeType": "Return",
                  "src": "662:33:14"
                }
              ]
            },
            "documentation": "@dev Return true if the address is allowed.\n @param _value The address we want to know if allowed.\n @return allowed True if the address is allowed, false otherwize.",
            "id": 2954,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2942,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "606:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "605:16:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2945,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "638:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2944,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:14:14"
            },
            "scope": 2955,
            "src": "585:117:14",
            "stateMutability": "nonpayable",
            "superFunction": 3017,
            "visibility": "public"
          }
        ],
        "scope": 2956,
        "src": "332:372:14"
      }
    ],
    "src": "91:613:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-12T16:57:03.239Z"
}
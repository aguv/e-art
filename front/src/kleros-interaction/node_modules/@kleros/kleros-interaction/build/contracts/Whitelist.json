{
  "contractName": "Whitelist",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "remove",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105e2806100536000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063446bffba1461007d578063715018a6146100ae5780638da5cb5b146100c557806395bc26731461011c578063beabdb7b1461014d578063f2fde38b14610196575b600080fd5b34801561008957600080fd5b506100ac60048036038101908080356000191690602001909291905050506101d9565b005b3480156100ba57600080fd5b506100c361026a565b005b3480156100d157600080fd5b506100da61036c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012857600080fd5b5061014b6004803603810190808035600019169060200190929190505050610391565b005b34801561015957600080fd5b5061017c6004803603810190808035600019169060200190929190505050610423565b604051808215151515815260200191505060405180910390f35b3480156101a257600080fd5b506101d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610455565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561023457600080fd5b6001806000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102c557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ec57600080fd5b600060016000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600060016000836000191660001916815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104b057600080fd5b6104b9816104bc565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156104f857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820a527e96795a68399e59a774fd55af1a19d8d87bfd603b69c97b45405d2e24cff0029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063446bffba1461007d578063715018a6146100ae5780638da5cb5b146100c557806395bc26731461011c578063beabdb7b1461014d578063f2fde38b14610196575b600080fd5b34801561008957600080fd5b506100ac60048036038101908080356000191690602001909291905050506101d9565b005b3480156100ba57600080fd5b506100c361026a565b005b3480156100d157600080fd5b506100da61036c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012857600080fd5b5061014b6004803603810190808035600019169060200190929190505050610391565b005b34801561015957600080fd5b5061017c6004803603810190808035600019169060200190929190505050610423565b604051808215151515815260200191505060405180910390f35b3480156101a257600080fd5b506101d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610455565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561023457600080fd5b6001806000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102c557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ec57600080fd5b600060016000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600060016000836000191660001916815260200190815260200160002060009054906101000a900460ff169050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104b057600080fd5b6104b9816104bc565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156104f857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820a527e96795a68399e59a774fd55af1a19d8d87bfd603b69c97b45405d2e24cff0029",
  "sourceMap": "323:624:20:-;;;575:10:33;567:5;;:18;;;;;;;;;;;;;;;;;;323:624:20;;;;;;",
  "deployedSourceMap": "323:624:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:78:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:33;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;556:82:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:82:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;837:108:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:78:20;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;535:4:20;517:9;:17;527:6;517:17;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;468:78;:::o;827:111:33:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;238:20::-;;;;;;;;;;;;;:::o;556:82:20:-;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;626:5:20;608:9;:17;618:6;608:17;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;556:82;:::o;837:108::-;890:12;921:9;:17;931:6;921:17;;;;;;;;;;;;;;;;;;;;;;;;;;;914:24;;837:108;;;:::o;1100:103:33:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;1338:171::-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o",
  "source": "/**\n *  @title Whitelist\n *  @author Clément Lesaege - <clement@lesaege.com>\n */\n\npragma solidity ^0.4.15;\n\nimport \"zeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./PermissionInterface.sol\";\n\n/**\n *  @title Whitelist\n *  This is a Whitelist for arbitrary values. The owner contract can whitelist values. \n */\ncontract Whitelist is Ownable, PermissionInterface {\n    \n    mapping(bytes32 => bool) registred; // True if the address is registered.\n    \n    function add(bytes32 _value) onlyOwner {\n        registred[_value]=true;\n    }\n    \n    function remove(bytes32 _value) onlyOwner {\n        registred[_value]=false;\n    }\n    \n    /** @dev Return true if the value is allowed.\n     *  @param _value The value we want to know if allowed.\n     *  @return allowed True if the value is allowed, false otherwise.\n     */\n    function isPermitted(bytes32 _value) public returns (bool allowed) {\n        return registred[_value];\n    }\n}",
  "sourcePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Whitelist.sol",
  "ast": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        3927
      ]
    },
    "id": 3928,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3876,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "83:24:20"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3877,
        "nodeType": "ImportDirective",
        "scope": 3928,
        "sourceUnit": 6097,
        "src": "109:59:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/PermissionInterface.sol",
        "file": "./PermissionInterface.sol",
        "id": 3878,
        "nodeType": "ImportDirective",
        "scope": 3928,
        "sourceUnit": 3875,
        "src": "169:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3879,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6096,
              "src": "345:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6096",
                "typeString": "contract Ownable"
              }
            },
            "id": 3880,
            "nodeType": "InheritanceSpecifier",
            "src": "345:7:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3881,
              "name": "PermissionInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3874,
              "src": "354:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionInterface_$3874",
                "typeString": "contract PermissionInterface"
              }
            },
            "id": 3882,
            "nodeType": "InheritanceSpecifier",
            "src": "354:19:20"
          }
        ],
        "contractDependencies": [
          3874,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Whitelist\n This is a Whitelist for arbitrary values. The owner contract can whitelist values. ",
        "fullyImplemented": true,
        "id": 3927,
        "linearizedBaseContracts": [
          3927,
          3874,
          6096
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3886,
            "name": "registred",
            "nodeType": "VariableDeclaration",
            "scope": 3927,
            "src": "385:34:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 3885,
              "keyType": {
                "id": 3883,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "393:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "385:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 3884,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "404:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3899,
              "nodeType": "Block",
              "src": "507:39:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3893,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "517:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3895,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3894,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "527:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "517:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "535:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "517:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3898,
                  "nodeType": "ExpressionStatement",
                  "src": "517:22:20"
                }
              ]
            },
            "documentation": null,
            "id": 3900,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3891,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3890,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "497:9:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "497:9:20"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3888,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3900,
                  "src": "481:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3887,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "480:16:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 3892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:0:20"
            },
            "scope": 3927,
            "src": "468:78:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3913,
              "nodeType": "Block",
              "src": "598:40:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3907,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "608:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3909,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3908,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3902,
                        "src": "618:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "608:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "626:5:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "608:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3912,
                  "nodeType": "ExpressionStatement",
                  "src": "608:23:20"
                }
              ]
            },
            "documentation": null,
            "id": 3914,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3905,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3904,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "588:9:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "588:9:20"
              }
            ],
            "name": "remove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3902,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3914,
                  "src": "572:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3901,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "571:16:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 3906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:0:20"
            },
            "scope": 3927,
            "src": "556:82:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3925,
              "nodeType": "Block",
              "src": "904:41:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3921,
                      "name": "registred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3886,
                      "src": "921:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 3923,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3922,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3916,
                      "src": "931:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "921:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3920,
                  "id": 3924,
                  "nodeType": "Return",
                  "src": "914:24:20"
                }
              ]
            },
            "documentation": "@dev Return true if the value is allowed.\n @param _value The value we want to know if allowed.\n @return allowed True if the value is allowed, false otherwise.",
            "id": 3926,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3916,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3926,
                  "src": "858:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3915,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "857:16:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 3920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3919,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3926,
                  "src": "890:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3918,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "889:14:20"
            },
            "scope": 3927,
            "src": "837:108:20",
            "stateMutability": "nonpayable",
            "superFunction": 3873,
            "visibility": "public"
          }
        ],
        "scope": 3928,
        "src": "323:624:20"
      }
    ],
    "src": "83:864:20"
  },
  "legacyAST": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        3927
      ]
    },
    "id": 3928,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3876,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "83:24:20"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3877,
        "nodeType": "ImportDirective",
        "scope": 3928,
        "sourceUnit": 6097,
        "src": "109:59:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/PermissionInterface.sol",
        "file": "./PermissionInterface.sol",
        "id": 3878,
        "nodeType": "ImportDirective",
        "scope": 3928,
        "sourceUnit": 3875,
        "src": "169:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3879,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6096,
              "src": "345:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6096",
                "typeString": "contract Ownable"
              }
            },
            "id": 3880,
            "nodeType": "InheritanceSpecifier",
            "src": "345:7:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3881,
              "name": "PermissionInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3874,
              "src": "354:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionInterface_$3874",
                "typeString": "contract PermissionInterface"
              }
            },
            "id": 3882,
            "nodeType": "InheritanceSpecifier",
            "src": "354:19:20"
          }
        ],
        "contractDependencies": [
          3874,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Whitelist\n This is a Whitelist for arbitrary values. The owner contract can whitelist values. ",
        "fullyImplemented": true,
        "id": 3927,
        "linearizedBaseContracts": [
          3927,
          3874,
          6096
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3886,
            "name": "registred",
            "nodeType": "VariableDeclaration",
            "scope": 3927,
            "src": "385:34:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 3885,
              "keyType": {
                "id": 3883,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "393:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "385:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 3884,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "404:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3899,
              "nodeType": "Block",
              "src": "507:39:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3893,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "517:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3895,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3894,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "527:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "517:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "535:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "517:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3898,
                  "nodeType": "ExpressionStatement",
                  "src": "517:22:20"
                }
              ]
            },
            "documentation": null,
            "id": 3900,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3891,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3890,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "497:9:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "497:9:20"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3888,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3900,
                  "src": "481:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3887,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "480:16:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 3892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:0:20"
            },
            "scope": 3927,
            "src": "468:78:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3913,
              "nodeType": "Block",
              "src": "598:40:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3907,
                        "name": "registred",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "608:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3909,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3908,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3902,
                        "src": "618:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "608:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "626:5:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "608:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3912,
                  "nodeType": "ExpressionStatement",
                  "src": "608:23:20"
                }
              ]
            },
            "documentation": null,
            "id": 3914,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3905,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3904,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6044,
                  "src": "588:9:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "588:9:20"
              }
            ],
            "name": "remove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3902,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3914,
                  "src": "572:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3901,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "571:16:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 3906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:0:20"
            },
            "scope": 3927,
            "src": "556:82:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3925,
              "nodeType": "Block",
              "src": "904:41:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3921,
                      "name": "registred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3886,
                      "src": "921:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 3923,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3922,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3916,
                      "src": "931:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "921:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3920,
                  "id": 3924,
                  "nodeType": "Return",
                  "src": "914:24:20"
                }
              ]
            },
            "documentation": "@dev Return true if the value is allowed.\n @param _value The value we want to know if allowed.\n @return allowed True if the value is allowed, false otherwise.",
            "id": 3926,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3916,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3926,
                  "src": "858:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3915,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "857:16:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 3920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3919,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3926,
                  "src": "890:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3918,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "889:14:20"
            },
            "scope": 3927,
            "src": "837:108:20",
            "stateMutability": "nonpayable",
            "superFunction": 3873,
            "visibility": "public"
          }
        ],
        "scope": 3928,
        "src": "323:624:20"
      }
    ],
    "src": "83:864:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-12T16:57:03.247Z"
}
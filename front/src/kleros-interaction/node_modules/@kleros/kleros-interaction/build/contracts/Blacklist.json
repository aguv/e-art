{
  "contractName": "Blacklist",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "remove",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "isPermitted",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105f5806100536000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063446bffba1461007d578063715018a6146100ae5780638da5cb5b146100c557806395bc26731461011c578063beabdb7b1461014d578063f2fde38b14610196575b600080fd5b34801561008957600080fd5b506100ac60048036038101908080356000191690602001909291905050506101d9565b005b3480156100ba57600080fd5b506100c361026a565b005b3480156100d157600080fd5b506100da61036c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012857600080fd5b5061014b6004803603810190808035600019169060200190929190505050610391565b005b34801561015957600080fd5b5061017c6004803603810190808035600019169060200190929190505050610423565b604051808215151515815260200191505060405180910390f35b3480156101a257600080fd5b506101d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610436565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561023457600080fd5b6001806000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102c557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ec57600080fd5b600060016000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600061042e8261049d565b159050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561049157600080fd5b61049a816104cf565b50565b600060016000836000191660001916815260200190815260200160002060009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561050b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058206a215c320b335650047504c4480981ab020929a8e1f73fbf122912cee76a0e010029",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063446bffba1461007d578063715018a6146100ae5780638da5cb5b146100c557806395bc26731461011c578063beabdb7b1461014d578063f2fde38b14610196575b600080fd5b34801561008957600080fd5b506100ac60048036038101908080356000191690602001909291905050506101d9565b005b3480156100ba57600080fd5b506100c361026a565b005b3480156100d157600080fd5b506100da61036c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012857600080fd5b5061014b6004803603810190808035600019169060200190929190505050610391565b005b34801561015957600080fd5b5061017c6004803603810190808035600019169060200190929190505050610423565b604051808215151515815260200191505060405180910390f35b3480156101a257600080fd5b506101d7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610436565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561023457600080fd5b6001806000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102c557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ec57600080fd5b600060016000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600061042e8261049d565b159050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561049157600080fd5b61049a816104cf565b50565b600060016000836000191660001916815260200190815260200160002060009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561050b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058206a215c320b335650047504c4480981ab020929a8e1f73fbf122912cee76a0e010029",
  "sourceMap": "264:358:18:-;;;575:10:33;567:5;;:18;;;;;;;;;;;;;;;;;;264:358:18;;;;;;",
  "deployedSourceMap": "264:358:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:78:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:78:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:33;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;556:82:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:82:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;503:117:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:117:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:78:20;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;535:4:20;517:9;:17;527:6;517:17;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;468:78;:::o;827:111:33:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;238:20::-;;;;;;;;;;;;;:::o;556:82:20:-;719:5:33;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;626:5:20;608:9;:17;618:6;608:17;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;556:82;:::o;503:117:18:-;556:12;588:25;606:6;588:17;:25::i;:::-;587:26;580:33;;503:117;;;:::o;1100:103:33:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;837:108:20:-;890:12;921:9;:17;931:6;921:17;;;;;;;;;;;;;;;;;;;;;;;;;;;914:24;;837:108;;;:::o;1338:171:33:-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o",
  "source": "/**\n *  @title Blacklist\n *  @author Clément Lesaege - <clement@lesaege.com>\n */\n\npragma solidity ^0.4.15;\n\nimport \"./Whitelist.sol\";\n\n/**\n *  @title Address Blacklist\n *  This is a Blacklist for arbitrary values. The owner contract can Blacklist addresses. \n */\ncontract Blacklist is Whitelist {\n\n    \n    /** @dev Return true is the address is allowed.\n     *  @param _value The address we want to know if allowed.\n     *  @return allowed True if the address is allowed, false otherwize.\n     */\n    function isPermitted(bytes32 _value) public returns (bool allowed) {\n        return !super.isPermitted(_value);\n    }\n}",
  "sourcePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Blacklist.sol",
  "ast": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Blacklist.sol",
    "exportedSymbols": {
      "Blacklist": [
        3864
      ]
    },
    "id": 3865,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3846,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "83:24:18"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Whitelist.sol",
        "file": "./Whitelist.sol",
        "id": 3847,
        "nodeType": "ImportDirective",
        "scope": 3865,
        "sourceUnit": 3928,
        "src": "109:25:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3848,
              "name": "Whitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3927,
              "src": "286:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$3927",
                "typeString": "contract Whitelist"
              }
            },
            "id": 3849,
            "nodeType": "InheritanceSpecifier",
            "src": "286:9:18"
          }
        ],
        "contractDependencies": [
          3874,
          3927,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Address Blacklist\n This is a Blacklist for arbitrary values. The owner contract can Blacklist addresses. ",
        "fullyImplemented": true,
        "id": 3864,
        "linearizedBaseContracts": [
          3864,
          3927,
          3874,
          6096
        ],
        "name": "Blacklist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3862,
              "nodeType": "Block",
              "src": "570:50:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "587:26:18",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3858,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "606:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3856,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6707,
                          "src": "588:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_Blacklist_$3864",
                            "typeString": "contract super Blacklist"
                          }
                        },
                        "id": 3857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isPermitted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3926,
                        "src": "588:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) returns (bool)"
                        }
                      },
                      "id": 3859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "588:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3855,
                  "id": 3861,
                  "nodeType": "Return",
                  "src": "580:33:18"
                }
              ]
            },
            "documentation": "@dev Return true is the address is allowed.\n @param _value The address we want to know if allowed.\n @return allowed True if the address is allowed, false otherwize.",
            "id": 3863,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3851,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "524:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3850,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "523:16:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 3855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3854,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "556:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "555:14:18"
            },
            "scope": 3864,
            "src": "503:117:18",
            "stateMutability": "nonpayable",
            "superFunction": 3926,
            "visibility": "public"
          }
        ],
        "scope": 3865,
        "src": "264:358:18"
      }
    ],
    "src": "83:539:18"
  },
  "legacyAST": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Blacklist.sol",
    "exportedSymbols": {
      "Blacklist": [
        3864
      ]
    },
    "id": 3865,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3846,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "83:24:18"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/permission/Whitelist.sol",
        "file": "./Whitelist.sol",
        "id": 3847,
        "nodeType": "ImportDirective",
        "scope": 3865,
        "sourceUnit": 3928,
        "src": "109:25:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3848,
              "name": "Whitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3927,
              "src": "286:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$3927",
                "typeString": "contract Whitelist"
              }
            },
            "id": 3849,
            "nodeType": "InheritanceSpecifier",
            "src": "286:9:18"
          }
        ],
        "contractDependencies": [
          3874,
          3927,
          6096
        ],
        "contractKind": "contract",
        "documentation": " @title Address Blacklist\n This is a Blacklist for arbitrary values. The owner contract can Blacklist addresses. ",
        "fullyImplemented": true,
        "id": 3864,
        "linearizedBaseContracts": [
          3864,
          3927,
          3874,
          6096
        ],
        "name": "Blacklist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3862,
              "nodeType": "Block",
              "src": "570:50:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "587:26:18",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3858,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3851,
                          "src": "606:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3856,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6707,
                          "src": "588:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_Blacklist_$3864",
                            "typeString": "contract super Blacklist"
                          }
                        },
                        "id": 3857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isPermitted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3926,
                        "src": "588:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) returns (bool)"
                        }
                      },
                      "id": 3859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "588:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3855,
                  "id": 3861,
                  "nodeType": "Return",
                  "src": "580:33:18"
                }
              ]
            },
            "documentation": "@dev Return true is the address is allowed.\n @param _value The address we want to know if allowed.\n @return allowed True if the address is allowed, false otherwize.",
            "id": 3863,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isPermitted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3851,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "524:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3850,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "523:16:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 3855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3854,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "556:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "555:14:18"
            },
            "scope": 3864,
            "src": "503:117:18",
            "stateMutability": "nonpayable",
            "superFunction": 3926,
            "visibility": "public"
          }
        ],
        "scope": 3865,
        "src": "264:358:18"
      }
    ],
    "src": "83:539:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-12T16:57:03.246Z"
}